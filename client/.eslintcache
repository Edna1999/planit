[{"/Users/ednaomadjambe/planit/client/src/index.js":"1","/Users/ednaomadjambe/planit/client/src/App.js":"2","/Users/ednaomadjambe/planit/client/src/reportWebVitals.js":"3","/Users/ednaomadjambe/planit/client/src/pages/Login.js":"4","/Users/ednaomadjambe/planit/client/src/pages/Signup.js":"5","/Users/ednaomadjambe/planit/client/src/pages/Profile.js":"6","/Users/ednaomadjambe/planit/client/src/pages/Home.js":"7","/Users/ednaomadjambe/planit/client/src/components/Footer/index.js":"8","/Users/ednaomadjambe/planit/client/src/components/Header/index.js":"9","/Users/ednaomadjambe/planit/client/src/utils/auth.js":"10","/Users/ednaomadjambe/planit/client/src/utils/mutations.js":"11","/Users/ednaomadjambe/planit/client/src/utils/queries.js":"12","/Users/ednaomadjambe/planit/client/src/components/TaskForm/index.js":"13","/Users/ednaomadjambe/planit/client/src/components/TaskList/index.js":"14"},{"size":500,"mtime":1670887719606,"results":"15","hashOfConfig":"16"},{"size":2181,"mtime":1671497227563,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1670887719611,"results":"18","hashOfConfig":"16"},{"size":2503,"mtime":1670887719608,"results":"19","hashOfConfig":"16"},{"size":2966,"mtime":1671755188195,"results":"20","hashOfConfig":"16"},{"size":1728,"mtime":1671754101310,"results":"21","hashOfConfig":"16"},{"size":918,"mtime":1671754101309,"results":"22","hashOfConfig":"16"},{"size":843,"mtime":1670887719594,"results":"23","hashOfConfig":"16"},{"size":1315,"mtime":1671677389490,"results":"24","hashOfConfig":"16"},{"size":1043,"mtime":1670887719614,"results":"25","hashOfConfig":"16"},{"size":2160,"mtime":1671762115431,"results":"26","hashOfConfig":"16"},{"size":1631,"mtime":1671754101318,"results":"27","hashOfConfig":"16"},{"size":3080,"mtime":1671754101286,"results":"28","hashOfConfig":"16"},{"size":1462,"mtime":1671677389493,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"w0tkev",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/ednaomadjambe/planit/client/src/index.js",[],["62","63"],"/Users/ednaomadjambe/planit/client/src/App.js",[],"/Users/ednaomadjambe/planit/client/src/reportWebVitals.js",[],"/Users/ednaomadjambe/planit/client/src/pages/Login.js",[],"/Users/ednaomadjambe/planit/client/src/pages/Signup.js",[],"/Users/ednaomadjambe/planit/client/src/pages/Profile.js",["64","65"],"import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport TaskForm from '../components/TaskForm';\nimport TaskList from '../components/TaskList';\n\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\n        </h2>\n\n        <div className=\"col-12 col-md-10 mb-5\">\n          {/* <ThoughtList\n            thoughts={user.thoughts}\n            title={`${user.username}'s thoughts...`}\n            showTitle={false}\n            showUsername={false}\n          /> */}\n        </div>\n        {!userParam && (\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: '1px dotted #1a1a1a' }}\n          >\n            {/* <ThoughtForm /> */}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/ednaomadjambe/planit/client/src/pages/Home.js",["66","67","68"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ThoughtList from '../components/TaskList';\nimport ThoughtForm from '../components/TaskForm';\n\n// import { QUERY_THOUGHTS } from '../utils/queries';\n\nconst Home = () => {\n  // const { loading, data } = useQuery(QUERY_THOUGHTS);\n  // const thoughts = data?.thoughts || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        {/* <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          <ThoughtForm />\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div> */}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","/Users/ednaomadjambe/planit/client/src/components/Footer/index.js",[],"/Users/ednaomadjambe/planit/client/src/components/Header/index.js",[],"/Users/ednaomadjambe/planit/client/src/utils/auth.js",[],"/Users/ednaomadjambe/planit/client/src/utils/mutations.js",[],"/Users/ednaomadjambe/planit/client/src/utils/queries.js",[],"/Users/ednaomadjambe/planit/client/src/components/TaskForm/index.js",["69","70"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_TASK} from '../../utils/mutations';\nimport { QUERY_TASKS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst TaskForm = () => {\n  const [taskDescription, setTaskDescription] = useState('');\n\n  // const [characterCount, setCharacterCount] = useState(0);\n\n  const [addTask, { error }] = useMutation(ADD_TASK, {\n    update(cache, { data: { addTask } }) {\n      try {\n        const { tasks } = cache.readQuery({ query: QUERY_TASKS });\n\n        cache.writeQuery({\n          query: QUERY_TASKS,\n          data: { tasks: [addTask, ...tasks] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, tasks: [...me.tasks, addTask] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addTask({\n        variables: {\n          taskDescription,\n          taskAssignee: Auth.getProfile().data.username,\n        },\n      });\n\n      // setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // const handleChange = (event) => {\n  //   const { name, value } = event.target;\n\n  //   if (name === 'taskDescription' && value.length <= 280) {\n  //     setTaskDescription(value);\n  //     setCharacterCount(value.length);\n  //   }\n  // };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          {/* <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p> */}\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            {/* <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                // onChange={handleChange}\n              ></textarea>\n            </div> */}\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Task\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to ass tasks. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default TaskForm;\n","/Users/ednaomadjambe/planit/client/src/components/TaskList/index.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":16},{"ruleId":"75","severity":1,"message":"79","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":16},{"ruleId":"75","severity":1,"message":"80","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":18},{"ruleId":"75","severity":1,"message":"81","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":19},{"ruleId":"75","severity":1,"message":"82","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":19},{"ruleId":"75","severity":1,"message":"83","line":11,"column":27,"nodeType":"77","messageId":"78","endLine":11,"endColumn":45},{"ruleId":"75","severity":1,"message":"84","line":41,"column":15,"nodeType":"77","messageId":"78","endLine":41,"endColumn":19},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'TaskForm' is defined but never used.","Identifier","unusedVar","'TaskList' is defined but never used.","'useQuery' is defined but never used.","'ThoughtList' is defined but never used.","'ThoughtForm' is defined but never used.","'setTaskDescription' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]